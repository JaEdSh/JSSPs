metadata={systemName:"TravisConnecter",displayName:"TRAVIS",description:"A broker to connect to the Travis API",configuration:{ServiceURL:{displayName:"TravisConnecter Service URL",type:"string",value:"https://api-test.lacity.org/lawa/TravisOnBoard/GetTravisData/"}}},ondescribe=async function({configuration:e}){postSchema({objects:{Operators:{displayName:"Operators",description:"Gets Operator Data",properties:{APIKey:{displayName:"API Key",type:"string"},CompanyName:{displayName:"Company Name",type:"string"},StartDate:{displayName:"Start Date",type:"string"},EndDate:{displayName:"End Date",type:"string"},AccountID:{displayName:"Account ID",type:"number"},OperatorTypeName:{displayName:"Operator Type Name",type:"string"},OperatorTypeID:{displayName:"Operator Type ID",type:"number"},ServiceTypeID:{displayName:"Service Type ID",type:"number"},OpAuthName:{displayName:"Op Auth Name",type:"string"},OpAuthID:{displayName:"Op Auth ID",type:"number"},LegalName:{displayName:"Legal Name",type:"string"},OperatoringName:{displayName:"Operatoring Name",type:"string"},Address1:{displayName:"Address1",type:"string"},Address2:{displayName:"Address2",type:"string"},City:{displayName:"City",type:"string"},State:{displayName:"State",type:"string"},Zip:{displayName:"Zip",type:"string"},Phone1:{displayName:"Phone1",type:"string"},EmailAddress:{displayName:"Email Address",type:"string"},LAXAgreeEndDate:{displayName:"LAX Agree End Date",type:"string"},OpAuthNumber:{displayName:"Op Auth Number",type:"string"},LAXAgreeNumber:{displayName:"LAX Agree Number",type:"string"},SuspendedFlag:{displayName:"Suspended Flag",type:"boolean"},ContractContactFull:{displayName:"Contract Contact Full",type:"string"},FinanceContactFull:{displayName:"Finance Contact Full",type:"string"},PermitContactFull:{displayName:"Permit Contact Full",type:"string"},VehiclesCount:{displayName:"Vehicles Count",type:"string"},VehiclesFull:{displayName:"Vehicles Full",type:"string"}},methods:{getListByCompanyName:{displayName:"GetOperatorsByCompanyName",type:"list",inputs:["APIKey","CompanyName"],requiredInputs:["APIKey","CompanyName"],outputs:["AccountID","OperatorTypeName","OperatorTypeID","ServiceTypeID","OpAuthName","OpAuthID","LegalName","OperatoringName","Address1","Address2","City","State","Zip","Phone1","EmailAddress","LAXAgreeEndDate","OpAuthNumber","LAXAgreeNumber","SuspendedFlag","ContractContactFull","FinanceContactFull","PermitContactFull","VehiclesCount","VehiclesFull"]},getListByDateRange:{displayName:"GetOperatorsByDateRange",type:"list",inputs:["APIKey","StartDate","EndDate"],requiredInputs:["APIKey","StartDate","EndDate"],outputs:["AccountID","OperatorTypeName","OperatorTypeID","ServiceTypeID","OpAuthName","OpAuthID","LegalName","OperatoringName","Address1","Address2","City","State","Zip","Phone1","EmailAddress","LAXAgreeEndDate","OpAuthNumber","LAXAgreeNumber","SuspendedFlag","ContractContactFull","FinanceContactFull","PermitContactFull","VehiclesCount","VehiclesFull"]},getListByLSONumber:{displayName:"GetOperatorsByLSO",type:"list",inputs:["APIKey","LAXAgreeNumber"],requiredInputs:["APIKey","LAXAgreeNumber"],outputs:["AccountID","OperatorTypeName","OperatorTypeID","ServiceTypeID","OpAuthName","OpAuthID","LegalName","OperatoringName","Address1","Address2","City","State","Zip","Phone1","EmailAddress","LAXAgreeEndDate","OpAuthNumber","LAXAgreeNumber","SuspendedFlag","ContractContactFull","FinanceContactFull","PermitContactFull","VehiclesCount","VehiclesFull"]},getListByAccountId:{displayName:"GetOperatorsByAccountId",type:"list",inputs:["APIKey","AccountID"],requiredInputs:["APIKey","AccountID"],outputs:["AccountID","OperatorTypeName","OperatorTypeID","ServiceTypeID","OpAuthName","OpAuthID","LegalName","OperatoringName","Address1","Address2","City","State","Zip","Phone1","EmailAddress","LAXAgreeEndDate","OpAuthNumber","LAXAgreeNumber","SuspendedFlag","ContractContactFull","FinanceContactFull","PermitContactFull","VehiclesCount","VehiclesFull"]}}},Contacts:{displayName:"Contacts",description:"Operator contact information",properties:{ContactJSON:{displayName:"ContactJSON",type:"string"},AccountId:{displayName:"AccountId",type:"string"},ContactId:{displayName:"ContactId",type:"string"},FirstName:{displayName:"FirstName",type:"string"},LastName:{displayName:"LastName",type:"string"},Address1:{displayName:"Address1",type:"string"},City:{displayName:"City",type:"string"},State:{displayName:"State",type:"string"},Zip:{displayName:"Zip",type:"string"},Phone:{displayName:"Phone",type:"string"},Email:{displayName:"Email",type:"string"}},methods:{deserializeContact:{displayName:"DeserializeContact",type:"list",inputs:["ContactJSON"],requiredInputs:["ContactJSON"],outputs:["AccountId","ContactId","FirstName","LastName","Address1","City","State","Zip","Phone","Email"]}}},Vehicles:{displayName:"Vehicles",description:"Operator vehicle information",properties:{VehicleJSON:{displayName:"VehicleJSON",type:"string"},AccountId:{displayName:"AccountId",type:"string"},VehicleId:{displayName:"VehicleId",type:"string"},FleetNumber:{displayName:"FleetNumber",type:"number"},Year:{displayName:"Year",type:"number"},Make:{displayName:"Make",type:"string"},Model:{displayName:"Model",type:"string"},Color:{displayName:"Color",type:"string"},VIN:{displayName:"VIN",type:"string"},PassengerCapacity:{displayName:"PassengerCapacity",type:"number"},FuelTypeID:{displayName:"FuelTypeID",type:"number"},FuelTypeName:{displayName:"FuelTypeName",type:"string"},LicensePlate:{displayName:"LicensePlate",type:"string"},Weight:{displayName:"Weight",type:"number"},Transponder:{displayName:"Transponder",type:"string"},DecalNumber:{displayName:"DecalNumber",type:"string"}},methods:{deserializeVehicles:{displayName:"DeserializeVehicles",type:"list",inputs:["VehicleJSON"],requiredInputs:["VehicleJSON"],outputs:["AccountId","VehicleId","FleetNumber","Year","Make","Model","Color","VIN","PassengerCapacity","FuelTypeID","FuelTypeName","LicensePlate","Weight","Transponder","DecalNumber"]}}}}})},onexecute=async function({objectName:e,methodName:t,parameters:a,properties:r,configuration:i}){switch(e){case"Operators":await async function(e,t,a,r){switch(e){case"getListByCompanyName":await function(e,t,a){return new Promise(((e,r)=>{var i=a.ServiceURL+"Companies/",n=new XMLHttpRequest;if(n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);var t=JSON.parse(n.responseText);let a=[];a=t[0].TravisData.map((e=>{var t;return{AccountID:e.AccountID,OperatorTypeName:e.OperatorTypeName,OperatorTypeID:e.OperatorTypeID,ServiceTypeID:e.ServiceTypeID,OpAuthName:e.OpAuthName,OpAuthID:e.OpAuthID,LegalName:e.LegalName,OperatoringName:e.OperatingName,Address1:e.Address1,Address2:e.Address2,City:e.City,State:e.State,Zip:e.Zip,Phone1:e.Phone1,EmailAddress:e.EmailAddress,LAXAgreeEndDate:e.LAXAgreeEndDate,OpAuthNumber:e.OpAuthNumber,LAXAgreeNumber:e.LAXAgreeNumber,SuspendedFlag:e.SuspendedFlag,ContractContactFull:JSON.stringify(e.ContractContact),FinanceContactFull:JSON.stringify(e.FinanceContact),PermitContactFull:JSON.stringify(e.PermitContact),VehiclesCount:null===(t=e.Vehicles)||void 0===t?void 0:t.length,VehiclesFull:JSON.stringify(e.Vehicles)}})),postResult(a),e()}catch(e){r(e)}},"string"!=typeof t.APIKey)throw new Error('properties["APIKey"] is not of type string');if("string"!=typeof t.CompanyName)throw new Error('properties["CompanyName"] is not of type string');n.open("GET",i+encodeURIComponent(t.CompanyName)+"?apikey="+encodeURIComponent(t.APIKey)),n.setRequestHeader("Accept","application/json"),n.setRequestHeader("Content-Type","application/json"),n.send()}))}(0,a,r);break;case"getListByDateRange":await function(e,t,a){return new Promise(((e,r)=>{var i=a.ServiceURL+"PermitDates/",n=new XMLHttpRequest;if(n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);var t=JSON.parse(n.responseText);let a=[];a=t[0].TravisData.map((e=>{var t;return{AccountID:e.AccountID,OperatorTypeName:e.OperatorTypeName,OperatorTypeID:e.OperatorTypeID,ServiceTypeID:e.ServiceTypeID,OpAuthName:e.OpAuthName,OpAuthID:e.OpAuthID,LegalName:e.LegalName,OperatoringName:e.OperatingName,Address1:e.Address1,Address2:e.Address2,City:e.City,State:e.State,Zip:e.Zip,Phone1:e.Phone1,EmailAddress:e.EmailAddress,LAXAgreeEndDate:e.LAXAgreeEndDate,OpAuthNumber:e.OpAuthNumber,LAXAgreeNumber:e.LAXAgreeNumber,SuspendedFlag:e.SuspendedFlag,ContractContactFull:JSON.stringify(e.ContractContact),FinanceContactFull:JSON.stringify(e.FinanceContact),PermitContactFull:JSON.stringify(e.PermitContact),VehiclesCount:null===(t=e.Vehicles)||void 0===t?void 0:t.length,VehiclesFull:JSON.stringify(e.Vehicles)}})),postResult(a),e()}catch(e){r(e)}},"string"!=typeof t.APIKey)throw new Error('properties["APIKey"] is not of type string');if("string"!=typeof t.StartDate)throw new Error('properties["StartDate"] is not of type string');if("string"!=typeof t.EndDate)throw new Error('properties["EndDate"] is not of type string');n.open("GET",i+encodeURIComponent(t.StartDate)+"/"+encodeURIComponent(t.EndDate)+"?apikey="+encodeURIComponent(t.APIKey)),n.setRequestHeader("Accept","application/json"),n.setRequestHeader("Content-Type","application/json"),n.send()}))}(0,a,r);break;case"getListByLSONumber":await function(e,t,a){return new Promise(((e,r)=>{var i=a.ServiceURL+"lan/",n=new XMLHttpRequest;if(n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);var t=JSON.parse(n.responseText);let a=[];a=t[0].TravisData.map((e=>{var t;return{AccountID:e.AccountID,OperatorTypeName:e.OperatorTypeName,OperatorTypeID:e.OperatorTypeID,ServiceTypeID:e.ServiceTypeID,OpAuthName:e.OpAuthName,OpAuthID:e.OpAuthID,LegalName:e.LegalName,OperatoringName:e.OperatingName,Address1:e.Address1,Address2:e.Address2,City:e.City,State:e.State,Zip:e.Zip,Phone1:e.Phone1,EmailAddress:e.EmailAddress,LAXAgreeEndDate:e.LAXAgreeEndDate,OpAuthNumber:e.OpAuthNumber,LAXAgreeNumber:e.LAXAgreeNumber,SuspendedFlag:e.SuspendedFlag,ContractContactFull:JSON.stringify(e.ContractContact),FinanceContactFull:JSON.stringify(e.FinanceContact),PermitContactFull:JSON.stringify(e.PermitContact),VehiclesCount:null===(t=e.Vehicles)||void 0===t?void 0:t.length,VehiclesFull:JSON.stringify(e.Vehicles)}})),postResult(a),e()}catch(e){r(e)}},"string"!=typeof t.LAXAgreeNumber)throw new Error('properties["LAXAgreeNumber"] is not of type string');if("string"!=typeof t.APIKey)throw new Error('properties["APIKey"] is not of type string');n.open("GET",i+encodeURIComponent(t.LAXAgreeNumber)+"?apikey="+encodeURIComponent(t.APIKey)),n.setRequestHeader("Accept","application/json"),n.send()}))}(0,a,r);break;case"getListByAccountId":await function(e,t,a){return new Promise(((e,r)=>{var i=a.ServiceURL+"aid/",n=new XMLHttpRequest;if(n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status)throw new Error("Failed with status "+n.status);var t=JSON.parse(n.responseText);let a=[];a=t[0].TravisData.map((e=>{var t;return{AccountID:e.AccountID,OperatorTypeName:e.OperatorTypeName,OperatorTypeID:e.OperatorTypeID,ServiceTypeID:e.ServiceTypeID,OpAuthName:e.OpAuthName,OpAuthID:e.OpAuthID,LegalName:e.LegalName,OperatoringName:e.OperatingName,Address1:e.Address1,Address2:e.Address2,City:e.City,State:e.State,Zip:e.Zip,Phone1:e.Phone1,EmailAddress:e.EmailAddress,LAXAgreeEndDate:e.LAXAgreeEndDate,OpAuthNumber:e.OpAuthNumber,LAXAgreeNumber:e.LAXAgreeNumber,SuspendedFlag:e.SuspendedFlag,ContractContactFull:JSON.stringify(e.ContractContact),FinanceContactFull:JSON.stringify(e.FinanceContact),PermitContactFull:JSON.stringify(e.PermitContact),VehiclesCount:null===(t=e.Vehicles)||void 0===t?void 0:t.length,VehiclesFull:JSON.stringify(e.Vehicles)}})),postResult(a),e()}catch(e){r(e)}},"string"!=typeof t.APIKey)throw new Error('properties["APIKey"] is not of type string');n.open("GET",i+t.AccountID+"?apikey="+encodeURIComponent(t.APIKey)),n.setRequestHeader("Accept","application/json"),n.send()}))}(0,a,r);break;default:throw new Error("The method "+e+" is not supported.")}}(t,0,r,i);break;case"Contacts":await async function(e,t,a,r){switch(e){case"deserializeContact":await function(e,t,a){return new Promise(((e,a)=>{if("string"!=typeof t.ContactJSON)throw new Error('properties["ContactJSON"] is not of type string');let r=[];r=JSON.parse(t.ContactJSON).map((e=>({AccountID:e.AccountId,ContactId:e.ContactId,FirstName:e.FirstName,LastName:e.LastName,Address1:e.Address1,City:e.City,State:e.State,Zip:e.Zip,Phone:e.Phone,Email:e.Email}))),postResult(r),e()}))}(0,a);break;default:throw new Error("The method "+e+" is not supported.")}}(t,0,r);break;case"Vehicles":await async function(e,t,a,r){switch(e){case"deserializeVehicles":await function(e,t,a){return new Promise(((e,a)=>{if("string"!=typeof t.VehicleJSON)throw new Error('properties["VehicleJSON"] is not of type string');let r=[];r=JSON.parse(t.VehicleJSON).map((e=>({AccountID:e.AccountId,VehicleId:e.VehicleId,FleetNumber:e.FleetNumber,Year:e.Year,Make:e.Make,Model:e.Model,Color:e.Color,VIN:e.VIN,PassengerCapacity:e.PassengerCapacity,FuelTypeID:e.FuelTypeID,FuelTypeName:e.FuelTypeName,LicensePlate:e.LicensePlate,Weight:e.Weight,Transponder:e.Transponder,DecalNumber:e.DecalNumber}))),postResult(r),e()}))}(0,a);break;default:throw new Error("The method "+e+" is not supported.")}}(t,0,r);break;default:throw new Error("The object "+e+" is not supported.")}};
//# sourceMappingURL=index.js.map
